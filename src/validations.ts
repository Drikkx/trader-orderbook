// Generated by ts-to-zod
import { z } from 'zod'

export const feeStructSerializedSchema = z.object({
  recipient: z.string(),
  amount: z.string(),
  feeData: z.string(),
})

export const eRC1155OrderStructSerializedSchema = z.object({
  direction: z.number(),
  maker: z.string(),
  taker: z.string(),
  expiry: z.string(),
  nonce: z.string(),
  erc20Token: z.string(),
  erc20TokenAmount: z.string(),
  fees: z.array(feeStructSerializedSchema),
  erc1155Token: z.string(),
  erc1155TokenId: z.string(),
  erc1155TokenAmount: z.string(),
})

export const eRC721OrderStructSerializedSchema = z.object({
  direction: z.number(),
  maker: z.string(),
  taker: z.string(),
  expiry: z.string(),
  nonce: z.string(),
  erc20Token: z.string(),
  erc20TokenAmount: z.string(),
  fees: z.array(feeStructSerializedSchema),
  erc721Token: z.string(),
  erc721TokenId: z.string(),
})

export const nftOrderV4SerializedSchema = z.union([
  eRC1155OrderStructSerializedSchema,
  eRC721OrderStructSerializedSchema,
])

export const eCSignatureSchema = z.object({
  v: z.number(),
  r: z.string(),
  s: z.string(),
})

export const signatureStructSchema = z.object({
  signatureType: z.number(),
  v: z.number(),
  r: z.string(),
  s: z.string(),
})

export const signatureStructSerializedSchema = z.object({
  signatureType: z.number(),
  v: z.number(),
  r: z.string(),
  s: z.string(),
})

export const nftOrderV4DatabaseModelZodSchema = z.object({
  id: z.string(),
  maker: z.string(),
  taker: z.string(),
  expiry: z.string(),
  expiry_datetime: z.date(),
  nonce: z.string(),
  erc20_token: z.string(),
  erc20_token_amount: z.string(),
  fees: z.array(feeStructSerializedSchema),
  nft_token: z.string(),
  nft_token_id: z.string(),
  nft_token_amount: z.string(),
  system_metadata: z.any().optional(),
  app_metadata: z.any().optional(),
  chain_id: z.string(),
  verifying_contract: z.string(),
  direction: z.string(),
  signature: signatureStructSchema,
  nft_type: z.string(),
  date_added: z.date(),
  date_last_updated: z.date(),
})

export const signedERC721OrderStructSerializedSchema = eRC721OrderStructSerializedSchema.extend({
  signature: signatureStructSerializedSchema,
})

export const signedERC1155OrderStructSerializedSchema = eRC1155OrderStructSerializedSchema.extend({
  signature: signatureStructSerializedSchema,
})

export const signedNftOrderV4SerializedSchema = z.union([
  signedERC721OrderStructSerializedSchema,
  signedERC1155OrderStructSerializedSchema,
])