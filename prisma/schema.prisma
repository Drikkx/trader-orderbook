generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model orders_v4_nfts {
  id                   String    @id @unique(map: "id")
  maker                String
  taker                String    @default("0x0000000000000000000000000000000000000000")
  expiry               String
  expiry_datetime      DateTime
  nonce                String    @unique
  erc20_token          String
  erc20_token_amount   String
  fees                 Json?
  nft_token            String
  nft_token_id         String
  nft_token_amount     String
  nft_token_properties Json?
  system_metadata      Json?
  app_metadata         Json?
  chain_id             String
  verifying_contract   String
  direction            String
  signature            Json
  nft_type             String
  app_id               String?
  date_created         DateTime? @default(now())
  date_last_updated    DateTime? @default(now())
  order_valid          Boolean?
  date_last_validated  DateTime?

  @@unique([chain_id, nonce, erc20_token, erc20_token_amount, nft_token, nft_token_amount], map: "uniq_order_index")
}

model order_status_v4_nfts {
  id                 String    @id @default(dbgenerated("gen_random_uuid()"))
  block_number       BigInt?
  date_posted_to_db  DateTime? @default(now())
  order_status       String
  nonce              String
  block_hash         String?
  address            String?
  data               String?
  transaction_hash   String?
  signature          String?
  topic              String?
  name               String?
  parsed_args        Json?
  chain_id           String
  verifying_contract String

  @@unique([block_hash, order_status, chain_id, nonce], map: "comp")
  @@index([block_number], map: "order_status_block_num_idx")
  @@index([nonce], map: "order_status_v4_nfts_nonce_index")
  @@index([transaction_hash], map: "order_status_v4_nfts_tx_hash")
}

model job_records {
  id                 String    @id @default(dbgenerated("gen_random_uuid()"))
  job_name           String
  chain_id           String
  block_number       BigInt
  hash               String?
  parent_hash        String?
  job_data           Json?
  date_processed     DateTime? @default(now())
  verifying_contract String

  @@unique([job_name, chain_id, block_number, hash, parent_hash], map: "job_record_idx")
}

model blocks {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  number                BigInt
  hash                  String
  parent_hash           String
  nonce                 String
  timestamp             BigInt
  date_mined            DateTime
  chain_id              String
  date_processed_by_api DateTime? @default(now())

  @@unique([chain_id, number, hash, parent_hash, nonce], map: "unique_block_idx")
}

model nft_metadata {
  id                    String    @id @default(dbgenerated("gen_random_uuid()"))
  token_id              String
  token_address         String
  chain_id              String
  token_uri             String
  metadata              Json?
  token_url             String?
  token_url_mime_type   String?
  name                  String?
  description           String?
  content_url           String?
  content_url_mime_type String?
  image_url             String?
  external_link         String?
  attributes            Json?
  date_updated          DateTime? @default(now())
}

model opensea_collection_metadata_by_contract_address_v1 {
  address                         String    @id
  collection                      Json
  asset_contract_type             String?
  created_date                    String?
  name                            String?
  nft_version                     String?
  opensea_version                 String?
  owner                           String?
  schema_name                     String?
  symbol                          String?
  total_supply                    String?
  description                     String?
  external_link                   String?
  image_url                       String?
  default_to_fiat                 Boolean?
  dev_buyer_fee_basis_points      String?
  dev_seller_fee_basis_points     String?
  only_proxied_transfers          Boolean?
  opensea_buyer_fee_basis_points  String?
  opensea_seller_fee_basis_points String?
  buyer_fee_basis_points          String?
  seller_fee_basis_points         String?
  payout_address                  String?
  date_scrape_updated             DateTime? @default(now())
}

model opensea_collection_metadata_by_slug_v1 {
  slug                            String    @id
  name                            String?
  external_link                   String?
  description                     String?
  image_url                       String?
  primary_asset_contracts         Json?
  editors                         Json?
  traits                          Json?
  stats                           Json?
  banner_image_url                String?
  chat_url                        String?
  created_date                    DateTime?
  dev_buyer_fee_basis_points      String?
  dev_seller_fee_basis_points     String?
  discord_url                     String?
  display_data                    Json?
  external_url                    String?
  featured                        Boolean?
  featured_image_url              String?
  hidden                          Boolean?
  safelist_request_status         String?
  is_subject_to_whitelist         Boolean?
  large_image_url                 String?
  medium_username                 String?
  only_proxied_transfers          Boolean?
  opensea_buyer_fee_basis_points  String?
  payout_address                  String?
  opensea_seller_fee_basis_points String?
  require_email                   Boolean?
  short_description               String?
  telegram_url                    String?
  twitter_username                String?
  instagram_username              String?
  wiki_url                        String?
  is_nsfw                         Boolean?
  date_updated                    DateTime? @default(now())
}

model orders_with_latest_status {
  maker                String
  taker                String
  expiry               String
  expiry_datetime      DateTime
  nonce                String    @unique
  erc20_token          String
  erc20_token_amount   String
  fees                 Json?
  nft_token            String
  nft_token_id         String
  nft_token_amount     String
  nft_token_properties Json?
  system_metadata      Json?
  app_metadata         Json?
  chain_id             String
  verifying_contract   String
  direction            String
  signature            Json
  nft_type             String
  app_id               String?
  date_created         DateTime?
  date_last_updated    DateTime?
  order_valid          Boolean?
  date_last_validated  DateTime?
  transaction_hash     String?
  block_number         BigInt?
  order_status         String?
}
